buildscript {
    ext {
        springBootVersion = "2.0.0.RELEASE"
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.cloudfoundry:cf-gradle-plugin:1.1.2"
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:1.4.17"
    }
}

plugins {
    id "com.gorylenko.gradle-git-properties" version "1.4.6"
}

gitProperties {
    gitPropertiesDir = new File("${project.rootDir}/${project.name}/src/main/resources")
    gitRepositoryRoot = new File("${project.rootDir}")
}

apply plugin: "java"
apply plugin: "org.springframework.boot"
apply plugin: "groovy"
apply plugin: 'cloudfoundry'

jar {
    baseName = 'cofy-backend'
}

sourceSets {

    main {
        java {
            srcDir 'src/main/mock'
        }
    }

}

test {
    testLogging {
        exceptionFormat = 'full'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

configurations {
    compile.exclude module: "spring-boot-starter-tomcat"
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-jetty")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-redis")
    compile("org.springframework.boot:spring-boot-starter-mail")
    compile("org.springframework.boot:spring-boot-starter-hateoas")
    compile("org.springframework.cloud:spring-cloud-spring-service-connector")
    compile("org.springframework.cloud:spring-cloud-cloudfoundry-connector")
    compile('org.springframework.session:spring-session')

    compile("com.h2database:h2")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    compile("org.apache.httpcomponents:httpclient")

    compile("io.springfox:springfox-swagger-ui:2.4.0")
    compile("io.springfox:springfox-swagger2:2.4.0")
    compile("org.flywaydb:flyway-core:4.0.3")
    compile("org.projectlombok:lombok:1.16.10")
    compile group: 'commons-validator', name: 'commons-validator', version: '1.6'

    compile("mysql:mysql-connector-java:5.1.38")

    testCompile("org.springframework.boot:spring-boot-starter-test")

    testCompile("org.codehaus.groovy:groovy-all:2.4.1")
    testCompile("org.spockframework:spock-core:1.1-groovy-2.4")
    testCompile("org.spockframework:spock-spring:1.1-groovy-2.4")
    testCompile("org.dbunit:dbunit:2.5.2")
    testCompile("com.github.springtestdbunit:spring-test-dbunit:1.3.0")
    testCompile("com.jayway.jsonpath:json-path:2.2.0")
    testCompile("com.jayway.jsonpath:json-path-assert:2.2.0")
    testCompile("cglib:cglib:3.2.4")


    def jarLocation = "build/libs/cofy-backend.jar"
    def serverProcess

    bootRun {
        // to run with swagger do following in the CLI
        // ./gradlew -Dspring.profiles.active=swagger :backend:bootrun
        systemProperties System.properties
    }

    test {
        exclude '**/**Check.*'
        exclude '**/**TestLog.*'
        include '**/**Test.*'

        doLast {
            beforeTest { descriptor ->
                logger.lifecycle("Running test: " + descriptor)
            }
        }
    }

    task checkExternalDependencies(type: Test) {
        include '**/**Check.*'
        exclude '**/**Test.*'
        exclude '**/**TestLog.*'

        doLast {
            beforeTest { descriptor ->
                logger.lifecycle("Running test: " + descriptor)
            }
        }
    }


}